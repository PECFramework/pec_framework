@font-face {
    font-family: Gabarito;
    src: url(../public/Gabarito.ttf);
}

$darkThemeMain1: #282c34;
$darkThemeMain2: #1d1f25;
$darkThemeMain3: #474c57;
$darkThemeText: white;

$lightThemeMain1: rgb(255, 255, 255);
$lightThemeMain2: rgb(231, 231, 231);
$lightThemeMain3: rgb(219, 219, 219);
$lightThemeText: black;

$deleteColor: rgb(161, 15, 15);

$fontSize: 20px;
$fontSizeSmallText: 15px;
$boldFontWeight: 600;
$paddingSize: 10px;
$paddingSizeSmall: 5px;
$borderRadius: 0; //30px;
$borderRadiusSmall: 15px;
$iconSizeSmall: 20px;
$iconSizeMedium: 25px;
$iconSizeBig: 40px;
$animationSpeed: 0.3s;
$scrollbarSize: 5px;

@mixin scrollbar($thumbColor, $trackColor: mix($thumbColor, white, 50%)) {
    &::-webkit-scrollbar {
        width: $scrollbarSize;
        height: $scrollbarSize;
        border-radius: 10px;
    }

    &::-webkit-scrollbar-thumb {
        background: $thumbColor;
        border-radius: $scrollbarSize;
    }

    &::-webkit-scrollbar-track {
        background: $trackColor;
    }
}

@mixin input(
    $bgColor,
    $textColor,
    $disabledColor,
    $bgColorFocus: mix($bgColor, black, 90%)
) {
    input {
        background-color: $bgColor;
        color: $textColor;
        border-radius: $borderRadius;
        border: none;
        padding: $paddingSizeSmall;
    }

    input:focus {
        outline: none;
        background-color: $bgColorFocus;
    }

    input:disabled {
        background-color: $disabledColor;
    }
}

@mixin selectable($bgColor, $textColor, $bgColorFocus: mix($bgColor, black, 90%)) {
    .selectable {
        background-color: $bgColor;
        color: $textColor;
        border-radius: $borderRadius;
        border: none;
        padding: $paddingSizeSmall;
    }

    .selected {
        outline: none;
        background-color: $bgColorFocus;
    }
}

.darkTheme {
    background-color: $darkThemeMain1;
    color: $darkThemeText;

    .bgColor1 {
        background-color: $darkThemeMain1;
    }

    .bgColor2 {
        background-color: $darkThemeMain2;
    }

    .bgColor3 {
        background-color: $darkThemeMain3;
    }

    .smallIcon {
        color: $darkThemeText;
    }

    .mediumIcon {
        color: $darkThemeText;
    }

    .scroll {
        @include scrollbar($darkThemeMain2, $darkThemeMain3);
    }

    @include input($darkThemeMain2, $darkThemeText, $darkThemeMain1);
}

.lightTheme {
    background-color: $lightThemeMain1;
    color: $lightThemeText;

    .bgColor1 {
        background-color: $lightThemeMain1;
    }

    .bgColor2 {
        background-color: $lightThemeMain2;
    }

    .bgColor3 {
        background-color: $lightThemeMain3;
    }

    .smallIcon {
        color: $lightThemeText;
    }

    .mediumIcon {
        color: $lightThemeText;
    }

    .bigIcon {
        filter: invert(1);
    }

    .scroll {
        @include scrollbar($lightThemeMain3, $lightThemeMain2);
    }

    @include input($lightThemeMain2, $lightThemeText, $lightThemeMain1);
}

@mixin horizontalFlex {
    display: flex;
    align-items: center;
    gap: $paddingSize;
}

body {
    margin: 0;
    font-family: Gabarito;
    font-size: $fontSize;

    input {
        font-family: Gabarito;
    }
}

.app {
    display: flex;
    flex-direction: column;
    height: 100vh;

    .smallText {
        font-size: $fontSizeSmallText;
    }

    .topbar {
        padding: $paddingSize;
        display: flex;
        justify-content: space-between;

        .topbarContentWrapper {
            @include horizontalFlex;
        }
    }

    .workspaceWrapper {
        display: flex;
        flex-direction: column;
        height: calc(100vh - 2 * $paddingSize - $iconSizeMedium);
        width: 100vw;

        .workspacesBar {
            display: flex;
            gap: $paddingSize;
            padding: $paddingSize;
            overflow-x: scroll;
            white-space: nowrap;

            .workspaceCard {
                display: flex;
                align-items: center;
                gap: $paddingSize;
                border-radius: $borderRadius;
                padding: $paddingSize;
                cursor: pointer;

                .delete {
                    transition: $animationSpeed;
                }

                .delete:hover {
                    color: $deleteColor;
                }
            }
        }

        .workspace {
            margin: $paddingSize;
            padding: $paddingSize;
            border-radius: $borderRadius;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            gap: $paddingSize;

            .generationViewFirstFlex {
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: $paddingSize;
                flex-grow: 1;

                .generationViewSecondFlex {
                    display: flex;
                    flex-direction: column;
                    gap: $paddingSize;

                    div {
                        flex-grow: 1;
                    }
                }
            }

            .generationViewPlotWrapper {
                display: grid;
                gap: $paddingSize;
            }

            .panel {
                border-radius: $borderRadius;
                padding: $paddingSize;
                display: flex;
                flex-direction: column;

                .panelTitle {
                    font-weight: $boldFontWeight;
                    align-self: center;
                    margin-bottom: $paddingSize;
                }

                .formInput {
                    display: flex;
                    flex-direction: row;
                    justify-content: space-between;
                    padding: $paddingSizeSmall;

                    label {
                        font-size: $fontSizeSmallText;
                        position: relative;
                        text-wrap: nowrap;
                        width: 0;
                        height: 0;
                        top: calc($paddingSizeSmall * -2);
                        left: calc($paddingSizeSmall * 2);
                    }

                    input {
                        width: 100%;
                        height: calc(1em + 2 * $paddingSizeSmall);
                        padding-left: calc(2 * $paddingSizeSmall);
                    }
                }

                .formRadioInput {
                    font-size: $fontSizeSmallText;

                    legend {
                        position: relative;
                        left: calc($paddingSizeSmall * 2);
                    }

                    .radioButtons {
                        display: flex;
                        justify-content: space-evenly;
                        padding-top: $paddingSizeSmall;

                        .radioButtonWrapper {
                            display: flex;
                            align-items: center;
                            justify-content: center;
                        }
                    }
                }

                .deviceCardWrapper {
                    display: flex;
                    flex-direction: column;
                    gap: $paddingSize;

                    .deviceCard {
                        padding: $paddingSizeSmall;
                        border-radius: $borderRadiusSmall;
                    }
                }

                .button {
                    border-radius: $borderRadius;
                    padding: $paddingSizeSmall;
                    align-self: center;
                    align-items: center;
                }
            }

            .titlePanel {
                border-radius: $borderRadius;
                padding: $paddingSize;
                display: flex;
                font-weight: $boldFontWeight;
                justify-content: center;
            }

            .buttonsPanel {
                display: flex;
                gap: $paddingSize;
                justify-content: center;

                .button {
                    border-radius: $borderRadius;
                    padding: $paddingSize;
                    align-self: center;
                    align-items: center;
                    text-align: center;
                    cursor: pointer;
                    flex: 1;
                }

                .button:hover {
                    .smallIcon {
                        transform: scale(1.25);
                    }
                }
            }
        }
    }

    .smallIcon {
        height: $iconSizeSmall;
        width: $iconSizeSmall;
        cursor: pointer;
        transition: transform $animationSpeed;
    }

    .smallIcon:hover {
        transform: scale(1.25);
    }

    .mediumIcon {
        height: $iconSizeMedium;
        width: $iconSizeMedium;
        cursor: pointer;
        transition: transform $animationSpeed;
    }

    .mediumIcon:hover {
        transform: scale(1.25);
    }

    .bigIcon {
        height: $iconSizeBig;
        width: $iconSizeBig;
    }
}

@media screen and (min-width: 1000px) {
    .app {
        .workspaceWrapper {
            .workspace {
                .generationViewFirstFlex {
                    display: grid;
                    grid-template-columns: 1fr 1fr;
                    gap: $paddingSize;
                    flex-grow: 1;

                    .generationViewSecondFlex {
                        display: grid;
                        grid-template-columns: 1fr 1fr;
                        gap: $paddingSize;
                    }
                }

                .generationViewPlotFlex {
                    grid-template-columns: 2fr 1fr;
                }
            }
        }
    }
}
